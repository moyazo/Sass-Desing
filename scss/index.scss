$generalDimension : 100%;
$bodywidth : 100vw;
$bodyheight : 100vh;
$flexDisplay : flex;
$flexFlow1 : column;
$flexFlow2 : row;
$justifyCenter : center;
$justifyAround : space-around;
$alignCenter : center;
$hover : false;

@function flexFlow($flow){
    @return $flow;
}
@function changeToLetter($size){
    @return $size + 1;
}
@function changeToPadding($padding){
    @return $padding - 1;
}
@mixin generalDimensions($width,$height){
    width: $width;
    height: $height;
}
@mixin displayFlex($display,$flow){
    display: $display;
    flex-direction: flexFlow($flow);
}
@mixin flexPosition($justify,$align){
    justify-content: $justify;
    align-items: $align;
}
@mixin setColorLetter($color){
    color: $color;
}
@mixin setColor($color){
    background-color: $color;
}

body {
    @include generalDimensions($bodywidth, auto);
    @include displayFlex($flexDisplay, $flexFlow1);
    @include flexPosition(space-between, $alignCenter);
    margin: 0;
    overflow-x: hidden;
}

h2{
    width: $generalDimension;
    text-align: center;
    font-size: 1.2rem;
    font-weight: bold;
    padding: changeToPadding(2rem) 0;
    border-bottom: .15rem change-color(orange) solid
}

#container-info{
    @include generalDimensions($generalDimension, $generalDimension);
    @include displayFlex($flexDisplay, $flexFlow1);
    @include flexPosition($justifyCenter, $alignCenter);
    @include setColor(rgb(237, 237, 237));
    padding: changeToPadding(2.5rem);
    > :hover{
        padding: changeToPadding(2rem);
        color: white;
        @include setColor(orange);
        cursor: pointer;
        transition: 1s ease;
        img{
            width: 25%;
        }
        @if($hover == false){
            .images{
                @include displayFlex($flexDisplay, row);
                @include flexPosition($justifyCenter, $alignCenter);
            }
            $hover : true;
        }
    }
    > :not(:hover){
        padding: 0;
        transition: 1s ease;
        @if($hover == false){
            .images{
               display: none;
            }
        }  
    }
}

.info-1{
    font-size: changeToLetter(-.1rem);
}
@for $info from 1 through 4{
    .info-#{$info}{
        @extend .info-1;
    }
}

@for $item from 1 through 7{
    .item-#{$item}:hover{
        @include setColorLetter(black);
        transition: .5s ease;
    }
}





@media (min-width: 764px){
    body {
        @include generalDimensions($bodywidth, $bodyheight);
    }

    h2{
        font-size: changeToLetter(1rem);
    }

    
#container-info{
    @include flexPosition(space-around, $alignCenter);
}
}

@media (min-width: 1024px){
    h2{
        font-size: changeToLetter(2rem);
    }
    #container-info{
        @include displayFlex($flexDisplay,$flexFlow2 );
        @include flexPosition(space-around, $alignCenter);
    }
}


